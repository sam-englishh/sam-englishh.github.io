[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About Me:\nMy name is Sam and I am learning how to code with R and this is my first website! I am majoring in Economics and planning to minor in Data Science. I enjoy working with numbers and data to explain my reasoning and love learning about different ways to present data. Have a look at the data visualizations I made on my website :)\nAbout This Website:\nThis website has two data visualizations about topics I am interested in, chocolate and soccer. You can find the graphs in the “Data Visualizations” tab. The chocolate graph shows the relationship between cocoa percentage and flavour ratings of chocolate bars. The soccer graph shows the number of goals scored at each world cup since its origin."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sam English",
    "section": "",
    "text": "Hi! My name is Sam and I am learning how to code with R and this is my first website! I am majoring in Economics and planning to minor in Data Science. I enjoy working with numbers and data to explain my reasoning and love learning about different ways to present data. Have a look at the data visualizations I made on my website :)"
  },
  {
    "objectID": "ChocolateRatings.html",
    "href": "ChocolateRatings.html",
    "title": "Chocolate Ratings",
    "section": "",
    "text": "tuesdata &lt;- tidytuesdayR::tt_load('2022-11-29')\ntuesdata &lt;- tidytuesdayR::tt_load(2022, week = 48)\ntuesdata &lt;- tidytuesdayR::tt_load('2022-01-18')\ntuesdata &lt;- tidytuesdayR::tt_load(2022, week = 3)\n\nchocolate &lt;- tuesdata$chocolate\n\n\nlibrary(tidyverse)\n\nBelow is a graph that shows the relationship between the percent of cocoa in a chocolate bar and how it is rated on a scale of 1 to 5.\n\nsummary_data &lt;- chocolate |&gt;\n  select(cocoa_percent, rating) |&gt;\n  group_by(cocoa_percent) |&gt;\n  summarise(ave_rating = mean(rating))\n\nsummary_data$cocoa_percent &lt;- as.numeric(gsub(\"%\", \"\", summary_data$cocoa_percent))\n\nggplot(summary_data, aes(x = cocoa_percent, y = ave_rating)) +\n  geom_point() +\n  geom_smooth(se = FALSE) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(\n    x = \"Percent of Cocoa in Chocolate Bar\",\n    y = \"Rating\",\n    title = \"Rating of Chocolate Bar by Percent Cocoa\"\n  )"
  },
  {
    "objectID": "WorldCup.html",
    "href": "WorldCup.html",
    "title": "World Cup",
    "section": "",
    "text": "library(tidyverse)\n\nBelow is a graph that shows the number of goals scored at each world cup.\n\nworldcups &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv')\n\nggplot(worldcups, aes(x = year, y = goals_scored)) + \n  geom_point() + \n  geom_smooth(se = FALSE) +\n  labs(\n    x = \"World Cup Year\",\n    y = \"Number of Goals Scored\",\n    title = \"Number of Goals Scored Per World Cup\"\n  )"
  },
  {
    "objectID": "Mini Project 2.html",
    "href": "Mini Project 2.html",
    "title": "Mini Project 2",
    "section": "",
    "text": "tuesdata &lt;- tidytuesdayR::tt_load('2021-04-20')\ntuesdata &lt;- tidytuesdayR::tt_load(2021, week = 17)\n\nnetflix &lt;- tuesdata$netflix\n\nnetflix\n\n# A tibble: 7,787 × 12\n   show_id type    title director   cast  country date_added release_year rating\n   &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;             &lt;dbl&gt; &lt;chr&gt; \n 1 s1      TV Show 3%    &lt;NA&gt;       João… Brazil  August 14…         2020 TV-MA \n 2 s2      Movie   7:19  Jorge Mic… Demi… Mexico  December …         2016 TV-MA \n 3 s3      Movie   23:59 Gilbert C… Tedd… Singap… December …         2011 R     \n 4 s4      Movie   9     Shane Ack… Elij… United… November …         2009 PG-13 \n 5 s5      Movie   21    Robert Lu… Jim … United… January 1…         2008 PG-13 \n 6 s6      TV Show 46    Serdar Ak… Erda… Turkey  July 1, 2…         2016 TV-MA \n 7 s7      Movie   122   Yasir Al … Amin… Egypt   June 1, 2…         2019 TV-MA \n 8 s8      Movie   187   Kevin Rey… Samu… United… November …         1997 R     \n 9 s9      Movie   706   Shravan K… Divy… India   April 1, …         2019 TV-14 \n10 s10     Movie   1920  Vikram Bh… Rajn… India   December …         2008 TV-MA \n# ℹ 7,777 more rows\n# ℹ 3 more variables: duration &lt;chr&gt;, listed_in &lt;chr&gt;, description &lt;chr&gt;\n\n\n\nlibrary(dplyr)\nlibrary(tidytext)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(ggplot2)\n\n\nstop_words &lt;- c(\"the\", \"a\", \"of\", \"and\", \"in\", \"on\", \"with\", \"is\", \"to\", \"for\", \"at\", \"s\", \"2\", \"i\")\n\ncommon_words &lt;- netflix |&gt;\n  mutate(title = str_to_lower(title),                               \n         title = str_replace_all(title, \"[[:punct:]]\", \" \")) |&gt;     \n  rowwise() |&gt;                                                      \n  mutate(words = str_split(title, \"\\\\s+\")) |&gt;                       \n  unnest(words) |&gt;                                                  \n  filter(!words %in% stop_words,                                     \n         words != \"\") |&gt;                                            \n  group_by(words) |&gt;                                      \n  mutate(n = n()) |&gt;                                            \n  arrange(desc(n)) |&gt;                                          \n  distinct(words, n, .keep_all = TRUE) |&gt;\n  select(words, n) |&gt;\n  head(10)\n\ncommon_words\n\n# A tibble: 10 × 2\n# Groups:   words [10]\n   words         n\n   &lt;chr&gt;     &lt;int&gt;\n 1 love        152\n 2 my          127\n 3 you          81\n 4 man          79\n 5 christmas    78\n 6 world        69\n 7 story        67\n 8 life         66\n 9 movie        60\n10 little       58\n\n\n\nggplot(common_words, aes(x = reorder(words, -n),  y = n)) + \n  geom_bar(stat = \"identity\", fill = \"pink\") +\n  labs(title = \"Most Common Words in Netflix Titles\", \n       x = \"Words\", \n       y = \"Frequency\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n\n\n\n\n\n\n\n\nnetflix_by_year &lt;- netflix |&gt;\n  group_by(release_year, type) |&gt;\n  summarise(count = n())  \n\nnetflix_by_year\n\n# A tibble: 118 × 3\n# Groups:   release_year [73]\n   release_year type    count\n          &lt;dbl&gt; &lt;chr&gt;   &lt;int&gt;\n 1         1925 TV Show     1\n 2         1942 Movie       2\n 3         1943 Movie       3\n 4         1944 Movie       3\n 5         1945 Movie       3\n 6         1946 Movie       1\n 7         1946 TV Show     1\n 8         1947 Movie       1\n 9         1954 Movie       2\n10         1955 Movie       3\n# ℹ 108 more rows\n\nggplot(netflix_by_year, aes(x = release_year, y = count, color = type)) +\n  geom_line() +\n  labs(title = \"Number of Movies and TV Shows Released by Year on Netflix\", \n       x = \"Release Year\", \n       y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ntotal_titles &lt;- nrow(netflix)\n\nprop_titles &lt;- netflix |&gt;\n  mutate(title = str_to_lower(title)) |&gt; \n  summarise(\n    count_numbers = sum(str_detect(title, \"\\\\d\")),  \n    count_the_anywhere = sum(str_detect(title, \"the\")),  \n    count_the_start = sum(str_detect(title, \"^the\"))  \n  ) |&gt;\n  mutate(\n    proportion_the_anywhere = count_the_anywhere / total_titles, \n    proportion_start_with_the = count_the_start / total_titles, \n    proportion_with_numbers = count_numbers / total_titles  \n  )\n\nprop_titles\n\n# A tibble: 1 × 6\n  count_numbers count_the_anywhere count_the_start proportion_the_anywhere\n          &lt;int&gt;              &lt;int&gt;           &lt;int&gt;                   &lt;dbl&gt;\n1           426               1898             997                   0.244\n# ℹ 2 more variables: proportion_start_with_the &lt;dbl&gt;,\n#   proportion_with_numbers &lt;dbl&gt;\n\nprop_titles_long &lt;- prop_titles |&gt;\n  pivot_longer(\n    cols = starts_with(\"proportion\"),  # Select all proportion columns\n    names_to = \"condition\",              # New column for condition names\n    values_to = \"proportion\"             # New column for proportions\n  ) |&gt;\n  select(condition, proportion)\n\nprop_titles_long \n\n# A tibble: 3 × 2\n  condition                 proportion\n  &lt;chr&gt;                          &lt;dbl&gt;\n1 proportion_the_anywhere       0.244 \n2 proportion_start_with_the     0.128 \n3 proportion_with_numbers       0.0547\n\nggplot(prop_titles_long, aes(x = condition, y = proportion)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Proportions of Titles in Netflix\",\n    x = \"Title Condition\",\n    y = \"Proportion\",\n    fill = \"Condition\"\n  )"
  }
]